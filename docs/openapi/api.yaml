openapi: 3.0.0
servers:
  - description: Production API
    url: https://api.cloud.hypatos.ai/v1
  - description: Staging API
    url: https://api.studio.stage.hypatos.ai
info:
  description: |
    # Introduction
  
    Hypatos Studio offers a REST API which allows to
    interact with core resource and automate workflows.
    Currently the API covers a minimal set of operations and
    access may be provided upon request to Hypatos sales
    team.
    
    In order to interact with such API one must use an
    `application_id` and `application_key` pair which is
    used for authentication.
    # Authentication
    The `application_id` and `application_key` must be
    provided as basic authentication credentials, username
    and password respectively, in every request made to the
    API.
    
    For example a normal request would include the header:
    
    `Authorization: Basic <credentials>`
    
    where `<credentials>` is the base64-encoded string
    formed by `<application_id>:<application_key>`.

  version: 0.0.4
  title: Hypatos API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Documents
    description: |
      API to work with all documents across the company.
  - name: Project documents
    description: |
      Hypatos studio offers upload via UI or API and supports a variety of different file types: PDF, TIFF, JPEG, and PNG.
  - name: Projects
    description: |
      Every company in Hypatos studio may have multiple projects.
  - name: Health
    description: |
      API health
x-tagGroups:
  - name: Projects & Documents
    tags:
      - Projects
      - Project documents
      - Documents
  - name: Misc
    tags:
      - Health
paths:
  /health:
    $ref: './paths/health.yaml'
  /projects:
    $ref: './paths/projects.yaml'
  /projects/{projectId}:
    $ref: './paths/projects@{projectId}.yaml'
  /projects/{projectId}/documents:
    $ref: './paths/projects@{projectId}/documents.yaml'
  /projects/{projectId}/documents/{documentId}:
    $ref: './paths/projects@{projectId}/documents@{documentId}.yaml'
  /projects/{projectId}/documents/{documentId}/update:
    $ref: './paths/projects@{projectId}/documents@{documentId}update.yaml'
  /projects/{projectId}/documents/{documentId}/download:
    $ref: './paths/projects@{projectId}/documents@{documentId}download.yaml'
  /projects/{projectId}/documents/upload:
    $ref: './paths/projects@{projectId}/upload.yaml'
  /documents:
    $ref: './paths/documents/documents.yaml'
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    Health:
      $ref: "./components/schemas/Health.yaml"
    ShallowDocument:
      $ref: "./components/schemas/ShallowDocument.yaml"
    ShallowProject:
      $ref: "./components/schemas/ShallowProject.yaml"
    UploadResult:
      $ref: "./components/schemas/UploadResult.yaml"
